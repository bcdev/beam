#############################################################################
# Configuration for the Ceres runtime as used by BEAM.
# All properties described here can also be passed to the VM as system
# properties using the standard Java
#   -D<property>=<value>
# syntax. In addition, it is possible to use macros of the form
#   ${<property>}
# within a value. Macros will expand to the value of the referred (system)
# property.
#############################################################################

# The BEAM home directory. Used only if
# (1) this configuration file has been specified by the system property 'beam.config' or
# (2) the system property 'beam.home' has not been specified before.
# With other words, this setting will not overwrite an existing 'beam.home' property.
# Has no default value, must be given as system property if not specified here.
# beam.home = .

# The library path to be searched for common JARs. Can comprise multiple paths.
# Multiple paths must be separated using ';' (Windows) or ':' (Unix)
# Default value is '${beam.home}/lib'.
# beam.libDirs = ${beam.home}/lib

# The directory to be searched for modules.
# Default value is '${beam.home}/modules'.
# beam.modules = ${beam.home}/modules

# The ID of the application to launch.
# Has no default value, must be given as system property if not specified here.
beam.app = VisatMain

# Output log to the console?
# Default is 'false'.
# beam.consoleLog = true

# The log level, must be one of
# OFF, SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST, ALL.
# Default is 'OFF'.
# beam.logLevel = INFO

# Outputs extra debugging information for Ceres launcher and runtime
# Default value is 'false'.
# beam.debug = true

# New in BEAM 4.10
# The application display name.
beam.application.name = BEAM

# New in BEAM 4.10
# The application's project home page
beam.homepage.url = http://www.brockmann-consult.de/beam/

# New in BEAM 4.10
# The application's remote version file.
# Must contain a string of the form "VERSION <version-number>".
# Defaults to "${beam.homepage.url}software/version.txt".
beam.remoteVersion.url = http://www.brockmann-consult.de/beam/software/version.txt

# The URL of the remote module repository.
# Has no default value, but value can be adjusted in VISAT's preferences.
beam.repository.url = http://www.brockmann-consult.de/beam/software/repositories/4.10/

# The default page to be opened (by VISAT) if no internal information page regarding
# data sources was found. Usually this page resides as a resource in
# /doc/help/general/BeamDataSources.html located in the module [beam-help]
beam.datasources.url = http://www.brockmann-consult.de/beam/doc/help/general/BeamDataSources.html

# The path to the image for the splash screen's.
# If none is given the application will start without displaying
# a splash screen.
beam.splash.image = ${beam.home}/bin/splash.png

# The splash screen's progress bar area given as <x>,<y>,<width>,<height>
# Default value is '0,<splash.height>-9,<splash.width>,5'.
beam.splash.progressBar.area = 104,101,376,5

# The splash screen's progress bar color given as <R>,<G>,<B>[,<A]
# Default value is '0,255,0' (green).
beam.splash.progressBar.color = 255,153,51,150

# Weather or not the splash screen shall show a task label.
# Default value is 'false'.
beam.splash.taskLabel.enabled = true

# The font of the task label of the splash screen.
# Default value is 'Verdana,ITALIC,10'.
#beam.splash.taskLabel.font = Verdana,ITALIC,10

# The colour of the task label of the splash screen given as <R>,<G>,<B>[,<A].
# Default value is '255,255,255' (white).
beam.splash.taskLabel.color = 255,255,255,170

# The position of the task label of the splash screen given as <x>,<y>.
# Default value is '<splash.progressBar.area.x>,<splash.progressBar.area.y>+<splash.progressBar.area.height>+10'.
beam.splash.taskLabel.pos = 122,115

# Controls caching of display image tiles of intermediate operations from raw raster data
# to the finally displayed RGB image (since BEAM 4.5).
# The default value is 'false', meaning that no intermediate tile caching takes place.
# beam.imageManager.enableIntermediateTileCaching = true

# Controls caching of source image tiles generated by EO data readers (since BEAM 4.10).
# The default value is 'false', meaning that no source tile caching takes place.
# You may want to enable source tile caching if you mostly use EO data file located in
# generally slower file systems such as NFS whose performance is limited by network bandwidth.
# beam.imageManager.enableSourceTileCaching = true

# Specifies an observer for tile computations occurring during processing using the BEAM
# Graph Processing Framework (GPF).
# The value must be a name of a class that extends the abstract
# 'org.esa.beam.framework.gpf.monitor.TileComputationObserver' class (see Java API docs).
#
# BEAM comes with two default implementations. The first is
# 'org.esa.beam.framework.gpf.monitor.TileUsageReportGenerator'
# which generates tile usage reports from template files (Velocity template files, *.vm).
# Please have a look at the example template file '${beam-home}/conf/tile-usage-report.xhtml.vm'.
# It would generate an HTML report named 'tile-usage-report.xhtml' if the template file would be
# placed in the current working directory. The second is
# 'org.esa.beam.framework.gpf.monitor.TileComputationEventLogger' which immediately outputs
# a log entry once a tile has been computed or (even more important) re-computed.
#
# beam.gpf.tileComputationObserver = org.esa.beam.framework.gpf.monitor.TileUsageReportGenerator
# beam.gpf.tileComputationObserver = org.esa.beam.framework.gpf.monitor.TileComputationEventLogger

# Controls caching of tiles of graph processing framework (GPF) operators (since BEAM 4.5).
# The default value is 'false', meaning that GPF operator tiles are always cached.
# beam.gpf.disableTileCache = true

# Controls the tile size that is used for the images created when reading raster data from product files.
# 1. If only tileHeight is provided, tileWidth will equal number of swath pixels.
# 2. If only tileWidth is provided, tileHeight will be number of scan lines.
# 3. If neither tileWidth nor tileHeight is provided, a suitable tile size will be computed.
# The special value '*' means, that full scene width (height) will be used.
# beam.reader.tileWidth = *
# beam.reader.tileHeight = 64

# Controls whether a PixelGeoCoding is attached to MERIS FRG/FSG products (e.g. created with AMORGOS),
# if an Envisat (N1) data file is opened.
# The default value is 'false', meaning that a Tie-point geo-coding is used instead.
# beam.envisat.usePixelGeoCoding = true

# Controls the name of the initial geometry container, which is automatically created if
# the users draws the first geometry in a VISAT session.
# The default value is 'geometry'.
# beam.geometry.initialName = geometry

# If set to true, allows Ceres graphical layers to output extra debugging information, e.g.
# printing out rendering times and drawing image tile bounds.
# ceres.renderer.debug = true

# Sets the maximum number of parallel threads to be used for multi-threading,
# e.g. in order to compute image tiles.
# Defaults to the number of CPU cores available.
# beam.parallelism = 2